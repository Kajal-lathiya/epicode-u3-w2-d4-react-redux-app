{"ast":null,"code":"var _jsxFileName = \"D:\\\\EPICODE\\\\HOMEWORKS\\\\MODULE-3\\\\M3-W2-D4\\\\epicode-u3-w2-d4-react-redux-app\\\\src\\\\components\\\\CompanySearchResults.jsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport { Container, Row, Col } from 'react-bootstrap';\nimport Job from './Job';\nimport { useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CompanySearchResults = () => {\n  _s();\n  const [jobs, setJobs] = useState([]);\n  const params = useParams();\n  const baseEndpoint = 'https://strive-jobs-api.herokuapp.com/jobs?company=';\n  useEffect(() => {\n    getJobs();\n  }, []);\n  const getJobs = async () => {\n    try {\n      const response = await fetch(baseEndpoint + params.companyName);\n      if (response.ok) {\n        const {\n          data\n        } = await response.json();\n        setJobs(data);\n      } else {\n        alert('Error fetching results');\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: /*#__PURE__*/_jsxDEV(Row, {\n      children: /*#__PURE__*/_jsxDEV(Col, {\n        children: jobs.map(jobData => /*#__PURE__*/_jsxDEV(Job, {\n          data: jobData\n        }, jobData._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n_s(CompanySearchResults, \"dckmTRAm79Ju2O9AWzYTIwDN4qo=\", false, function () {\n  return [useParams];\n});\n_c = CompanySearchResults;\nexport default CompanySearchResults;\nvar _c;\n$RefreshReg$(_c, \"CompanySearchResults\");","map":{"version":3,"names":["useEffect","useState","Container","Row","Col","Job","useParams","CompanySearchResults","jobs","setJobs","params","baseEndpoint","getJobs","response","fetch","companyName","ok","data","json","alert","error","console","log","map","jobData","_id"],"sources":["D:/EPICODE/HOMEWORKS/MODULE-3/M3-W2-D4/epicode-u3-w2-d4-react-redux-app/src/components/CompanySearchResults.jsx"],"sourcesContent":["import { useEffect, useState } from 'react'\nimport { Container, Row, Col } from 'react-bootstrap'\nimport Job from './Job'\nimport { useParams } from 'react-router-dom'\n\nconst CompanySearchResults = () => {\n  const [jobs, setJobs] = useState([])\n  const params = useParams()\n\n  const baseEndpoint = 'https://strive-jobs-api.herokuapp.com/jobs?company='\n\n  useEffect(() => {\n    getJobs()\n  }, [])\n\n  const getJobs = async () => {\n    try {\n      const response = await fetch(baseEndpoint + params.companyName)\n      if (response.ok) {\n        const { data } = await response.json()\n        setJobs(data)\n      } else {\n        alert('Error fetching results')\n      }\n    } catch (error) {\n      console.log(error)\n    }\n  }\n\n  return (\n    <Container>\n      <Row>\n        <Col>\n          {jobs.map((jobData) => (\n            <Job key={jobData._id} data={jobData} />\n          ))}\n        </Col>\n      </Row>\n    </Container>\n  )\n}\n\nexport default CompanySearchResults\n"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,SAASC,SAAS,EAAEC,GAAG,EAAEC,GAAG,QAAQ,iBAAiB;AACrD,OAAOC,GAAG,MAAM,OAAO;AACvB,SAASC,SAAS,QAAQ,kBAAkB;AAAA;AAE5C,MAAMC,oBAAoB,GAAG,MAAM;EAAA;EACjC,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAMS,MAAM,GAAGJ,SAAS,EAAE;EAE1B,MAAMK,YAAY,GAAG,qDAAqD;EAE1EX,SAAS,CAAC,MAAM;IACdY,OAAO,EAAE;EACX,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMA,OAAO,GAAG,YAAY;IAC1B,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACH,YAAY,GAAGD,MAAM,CAACK,WAAW,CAAC;MAC/D,IAAIF,QAAQ,CAACG,EAAE,EAAE;QACf,MAAM;UAAEC;QAAK,CAAC,GAAG,MAAMJ,QAAQ,CAACK,IAAI,EAAE;QACtCT,OAAO,CAACQ,IAAI,CAAC;MACf,CAAC,MAAM;QACLE,KAAK,CAAC,wBAAwB,CAAC;MACjC;IACF,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;IACpB;EACF,CAAC;EAED,oBACE,QAAC,SAAS;IAAA,uBACR,QAAC,GAAG;MAAA,uBACF,QAAC,GAAG;QAAA,UACDZ,IAAI,CAACe,GAAG,CAAEC,OAAO,iBAChB,QAAC,GAAG;UAAmB,IAAI,EAAEA;QAAQ,GAA3BA,OAAO,CAACC,GAAG;UAAA;UAAA;UAAA;QAAA,QACtB;MAAC;QAAA;QAAA;QAAA;MAAA;IACE;MAAA;MAAA;MAAA;IAAA;EACF;IAAA;IAAA;IAAA;EAAA,QACI;AAEhB,CAAC;AAAA,GAnCKlB,oBAAoB;EAAA,QAETD,SAAS;AAAA;AAAA,KAFpBC,oBAAoB;AAqC1B,eAAeA,oBAAoB;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}